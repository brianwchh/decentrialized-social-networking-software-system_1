{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/brian/project/p2pchat/react/frontend/src/components/Content/Gallery/ImageDetailView/ImageDetailView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ImageDetailView.css';\nimport getSafeProperty from '../../../../utility/getSafeProperty';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nfunction ImageDetailView(props) {\n  _s();\n\n  const [ImageArray, setImageArray] = useState([]);\n  const [SelectedId, setSelectedId] = useState();\n  const imageThumbNailsRef = useRef(null);\n  const imageDetailRef = useRef(null);\n  let state = {\n    scrollBarPosition: 0,\n    reachRightEnd: 0,\n    previousValuesForScrollLeft0: null,\n    previousValuesForScrollLeft1: null,\n    previousValuesForScrollLeft2: null\n  };\n  useEffect(() => {\n    // on component mount \n    addEventListener2Component();\n\n    if (props.location.myparams) {\n      const ImageArray = getSafeProperty(() => props.location.myparams.ImageArray, 'undefined');\n\n      if (ImageArray !== 'undefined') {\n        setImageArray(ImageArray);\n      }\n    }\n\n    setSelectedId(props.match.params.imageId);\n    return () => {\n      // component unmount \n      removeEventListenerFromComponent();\n    };\n  }, []);\n  useEffect(() => {\n    console.log(\"hello data received\", SelectedId);\n  }, [SelectedId]);\n\n  const addEventListener2Component = e => {\n    imageThumbNailsRef.current.addEventListener('wheel', handleOnWheel);\n  };\n\n  const removeEventListenerFromComponent = () => {\n    if (imageThumbNailsRef.current) {\n      imageThumbNailsRef.current.removeEventListener('wheel', handleOnWheel);\n    }\n  };\n\n  const handleOnclickToSelect = (e, id) => {\n    setSelectedId(id);\n  };\n\n  const handleOnClickForward = e => {\n    const total_width = imageDetailRef.current.scrollWidth; // const windowWidth = window.innerWidth\n\n    const imageWidth = total_width / AlbumList.length; // if (windowWidth <= 800) {\n    // small device, one image per row\n\n    imageDetailRef.current.scrollLeft += imageWidth;\n\n    if (imageDetailRef.current.scrollLeft % imageWidth != 0) {\n      imageDetailRef.current.scrollLeft = Math.ceil(imageDetailRef.current.scrollLeft / imageWidth) * imageWidth;\n    } // }\n\n\n    console.log(imageWidth, imageDetailRef.current.scrollLeft, total_width);\n  };\n\n  const handleOnClickBack = e => {\n    const total_width = imageDetailRef.current.scrollWidth;\n    const windowWidth = window.innerWidth;\n    const imageWidth = total_width / AlbumList.length; // if (windowWidth <= 800) {\n    // small device, one image per row\n\n    imageDetailRef.current.scrollLeft -= imageWidth;\n\n    if (imageDetailRef.current.scrollLeft % imageWidth != 0) {\n      imageDetailRef.current.scrollLeft = Math.ceil(imageDetailRef.current.scrollLeft / imageWidth) * imageWidth;\n    } // }\n    // console.log(imageWidth , imageDetailRef.current.scrollLeft, total_width)\n\n  };\n\n  function handleOnWheel(e) {\n    // console.log(state.reachRightEnd, state.previousValuesForScrollLeft0,\n    //     state.previousValuesForScrollLeft1,state.previousValuesForScrollLeft2)\n    if (e.deltaY < 0) {\n      // scroll up \n      if (window.scrollY == 0) {\n        e.preventDefault(); // disable parent scroll \n\n        imageThumbNailsRef.current.scrollLeft -= imageThumbNailsRef.current.scrollWidth * 0.02; // if (imageThumbNailsRef.current.scrollLeft <=0) {\n        //     imageThumbNailsRef.current.scrollLeft = 0 ;\n        // }\n        // reset if scroll left \n\n        state.reachRightEnd = 0;\n        state.previousValuesForScrollLeft0 = 0;\n        state.previousValuesForScrollLeft1 = 0;\n        state.previousValuesForScrollLeft2 = 0;\n      } //if parent scrolly != equal to 0 , scroll parent first\n\n    } else {\n      //scroll down , scroll child first , then propagate to parent scroll\n      if (state.reachRightEnd == 0) {\n        // scroll right , never can reach maximum\n        // find a signal indicating reaching the right edge.\n        e.preventDefault(); // disable parent scroll \n\n        imageThumbNailsRef.current.scrollLeft += imageThumbNailsRef.current.scrollWidth * 0.02;\n        state.previousValuesForScrollLeft2 = state.previousValuesForScrollLeft1;\n        state.previousValuesForScrollLeft1 = state.previousValuesForScrollLeft0;\n        state.previousValuesForScrollLeft0 = imageThumbNailsRef.current.scrollLeft;\n\n        if (state.previousValuesForScrollLeft0 == state.previousValuesForScrollLeft1 && state.previousValuesForScrollLeft1 == state.previousValuesForScrollLeft2 && state.previousValuesForScrollLeft1 > 10) {\n          state.reachRightEnd = 1;\n        }\n      }\n    }\n\n    console.log(imageThumbNailsRef.current.scrollLeft, imageThumbNailsRef.current.scrollWidth);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"imageDetalViewRoot\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imageDetail\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: ImageArray[SelectedId]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arrowForwardIconWrapper\",\n        onClick: handleOnClickForward,\n        children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n          style: {\n            color: 'rgb(255,255,255)',\n            fontSize: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arrowBackIconWrapper\",\n        onClick: handleOnClickBack,\n        children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n          style: {\n            color: 'rgb(255,255,255)',\n            fontSize: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imageThumbNails\",\n      ref: imageThumbNailsRef,\n      children: ImageArray.map((image, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"album\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: ImageArray[id],\n          onClick: e => {\n            handleOnclickToSelect(e, id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 29\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ImageDetailView, \"8/H8GBdaLj3bw+0FEJcxNo7VD+o=\");\n\n_c = ImageDetailView;\nexport default ImageDetailView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageDetailView\");","map":{"version":3,"sources":["/home/brian/project/p2pchat/react/frontend/src/components/Content/Gallery/ImageDetailView/ImageDetailView.js"],"names":["React","useState","useEffect","useRef","getSafeProperty","ArrowForwardIcon","ArrowBackIcon","ImageDetailView","props","ImageArray","setImageArray","SelectedId","setSelectedId","imageThumbNailsRef","imageDetailRef","state","scrollBarPosition","reachRightEnd","previousValuesForScrollLeft0","previousValuesForScrollLeft1","previousValuesForScrollLeft2","addEventListener2Component","location","myparams","match","params","imageId","removeEventListenerFromComponent","console","log","e","current","addEventListener","handleOnWheel","removeEventListener","handleOnclickToSelect","id","handleOnClickForward","total_width","scrollWidth","imageWidth","AlbumList","length","scrollLeft","Math","ceil","handleOnClickBack","windowWidth","window","innerWidth","deltaY","scrollY","preventDefault","color","fontSize","map","image"],"mappings":"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","sourcesContent":["import React, {useState,useEffect,useRef} from 'react'\nimport './ImageDetailView.css'\nimport getSafeProperty from '../../../../utility/getSafeProperty'\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nfunction ImageDetailView(props) {\n\n    const [ImageArray, setImageArray] = useState([])\n    const [SelectedId, setSelectedId] = useState()\n    const imageThumbNailsRef = useRef(null)\n    const imageDetailRef = useRef(null)\n\n    let state = {\n        scrollBarPosition : 0 ,\n        reachRightEnd : 0 ,\n        previousValuesForScrollLeft0 : null,\n        previousValuesForScrollLeft1 : null,\n        previousValuesForScrollLeft2 : null,\n    }\n\n    useEffect(\n        () => {\n            // on component mount \n\n            addEventListener2Component();\n\n            if (props.location.myparams) {\n\n                const ImageArray = getSafeProperty(()=>props.location.myparams.ImageArray, 'undefined')\n                if (ImageArray  !== 'undefined') {\n                    setImageArray(ImageArray)\n                }\n                \n            }\n\n            setSelectedId(props.match.params.imageId)\n\n            return () => {\n                // component unmount \n                removeEventListenerFromComponent();\n            }\n        },\n\n        [])\n\n    \n    useEffect(\n        () => {\n            console.log(\"hello data received\", SelectedId)\n        },\n\n    [SelectedId])\n\n\n    const addEventListener2Component = (e) => {\n        imageThumbNailsRef.current.addEventListener('wheel', handleOnWheel)\n    }\n    \n    const removeEventListenerFromComponent = () => {\n        if (imageThumbNailsRef.current) {\n            imageThumbNailsRef.current.removeEventListener('wheel',handleOnWheel)\n        }\n    }\n\n    const handleOnclickToSelect = (e,id) => {\n        setSelectedId(id)\n    }\n\n    const handleOnClickForward = (e) => {\n\n        const total_width = imageDetailRef.current.scrollWidth ;\n        // const windowWidth = window.innerWidth\n        const imageWidth = total_width / AlbumList.length;\n        // if (windowWidth <= 800) {\n            // small device, one image per row\n            imageDetailRef.current.scrollLeft += imageWidth;\n            if (imageDetailRef.current.scrollLeft % imageWidth != 0){\n                imageDetailRef.current.scrollLeft = Math.ceil((imageDetailRef.current.scrollLeft / imageWidth)) * imageWidth\n            }\n        // }\n\n        console.log(imageWidth, imageDetailRef.current.scrollLeft, total_width)\n    }\n\n    const handleOnClickBack = (e) => {\n        \n        const total_width = imageDetailRef.current.scrollWidth ;\n        const windowWidth = window.innerWidth\n        const imageWidth = total_width / AlbumList.length;\n        // if (windowWidth <= 800) {\n            // small device, one image per row\n            imageDetailRef.current.scrollLeft -= imageWidth;\n            if (imageDetailRef.current.scrollLeft % imageWidth != 0){\n                imageDetailRef.current.scrollLeft = Math.ceil((imageDetailRef.current.scrollLeft / imageWidth)) * imageWidth\n            }\n        // }\n\n        // console.log(imageWidth , imageDetailRef.current.scrollLeft, total_width)\n    }\n\n    function handleOnWheel(e){\n\n        // console.log(state.reachRightEnd, state.previousValuesForScrollLeft0,\n        //     state.previousValuesForScrollLeft1,state.previousValuesForScrollLeft2)\n\n        if (e.deltaY < 0) {\n            // scroll up \n            if(window.scrollY == 0) {\n                e.preventDefault(); // disable parent scroll \n                \n                imageThumbNailsRef.current.scrollLeft -= imageThumbNailsRef.current.scrollWidth * 0.02 ;\n                // if (imageThumbNailsRef.current.scrollLeft <=0) {\n                //     imageThumbNailsRef.current.scrollLeft = 0 ;\n                // }\n                // reset if scroll left \n                state.reachRightEnd = 0 ;\n                state.previousValuesForScrollLeft0 = 0 ;\n                state.previousValuesForScrollLeft1 = 0 ;\n                state.previousValuesForScrollLeft2 = 0 ;\n\n            }\n            //if parent scrolly != equal to 0 , scroll parent first\n        } else {\n            //scroll down , scroll child first , then propagate to parent scroll\n            if (state.reachRightEnd == 0 ){ // scroll right , never can reach maximum\n                // find a signal indicating reaching the right edge.\n                e.preventDefault(); // disable parent scroll \n                imageThumbNailsRef.current.scrollLeft += imageThumbNailsRef.current.scrollWidth * 0.02;\n                \n                state.previousValuesForScrollLeft2 = state.previousValuesForScrollLeft1;\n                state.previousValuesForScrollLeft1 = state.previousValuesForScrollLeft0;\n                state.previousValuesForScrollLeft0 = imageThumbNailsRef.current.scrollLeft ;\n                if (state.previousValuesForScrollLeft0 == state.previousValuesForScrollLeft1 &&\n                    state.previousValuesForScrollLeft1 == state.previousValuesForScrollLeft2 && \n                    state.previousValuesForScrollLeft1 >  10\n                    ){\n                        state.reachRightEnd = 1 ;\n                    }\n            }\n        }\n\n        console.log(imageThumbNailsRef.current.scrollLeft, imageThumbNailsRef.current.scrollWidth)\n        \n\n    }\n\n\n    return (\n        <div className='imageDetalViewRoot'>\n            <div className='imageDetail'>\n                <img src={ImageArray[SelectedId]} />\n                <div className='arrowForwardIconWrapper' onClick={handleOnClickForward}> \n                    <ArrowForwardIcon style={{ color: 'rgb(255,255,255)', fontSize: \"20px\" }} />\n                </div>\n                <div className='arrowBackIconWrapper' onClick={handleOnClickBack} > \n                    <ArrowBackIcon style={{ color: 'rgb(255,255,255)', fontSize: \"20px\" }}  />\n                </div>\n            </div>\n            <div className='imageThumbNails' ref={imageThumbNailsRef}>\n                    {ImageArray.map((image,id) => (\n                        <div className='album' \n                            key={id}\n                        >\n                            <img src={ImageArray[id]} onClick={(e)=>{handleOnclickToSelect(e,id)}} />\n                        </div>   \n                    ))}\n            </div>\n        </div>\n    )\n}\n\nexport default ImageDetailView\n"]},"metadata":{},"sourceType":"module"}