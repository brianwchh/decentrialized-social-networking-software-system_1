{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/brian/project/p2pchat/react/frontend/src/components/Content/Gallery/ImageDetailView/ImageDetailView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ImageDetailView.css';\nimport getSafeProperty from '../../../../utility/getSafeProperty';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\n\nfunction ImageDetailView(props) {\n  _s();\n\n  const [ImageArray, setImageArray] = useState([]);\n  const [SelectedId, setSelectedId] = useState(0);\n  const imageThumbNailsRef = useRef(null);\n  const imageDetailRef = useRef(null);\n  let state = {\n    reachRightEnd: 0,\n    previousValuesForScrollLeft0: null,\n    previousValuesForScrollLeft1: null,\n    previousValuesForScrollLeft2: null\n  };\n  useEffect(() => {\n    // on component mount \n    addEventListener2Component();\n    addEventListener2ImgeDetail(); // SelectedIdRef.current = SelectedId ;\n\n    window.imageIdSelted = Number(0);\n\n    if (props.location.myparams) {\n      const ImageArray = getSafeProperty(() => props.location.myparams.ImageArray, 'undefined');\n\n      if (ImageArray !== 'undefined') {\n        setImageArray(ImageArray);\n      }\n    }\n\n    setSelectedId(props.match.params.imageId);\n    return () => {\n      // component unmount \n      removeEventListenerFromComponent();\n      removeEventListener2ImgeDetail();\n    };\n  }, []);\n  useEffect(() => {\n    // console.log(SelectedId)\n    // SelectedIdRef.current = SelectedId ;\n    // state.imageIdSeleted = SelectedId ;\n    // window.imageIdSelted = Number(SelectedId) ;\n    // console.log(\"window.imageIdSelted, \", window.imageIdSelted)\n    console.log(\"ImageArray.length : \", ImageArray.length);\n    const imageWidth = imageThumbNailsRef.current.scrollWidth / ImageArray.length;\n    const width2Set = imageWidth * SelectedId;\n\n    if (width2Set + window.innerWidth < imageThumbNailsRef.current.scrollWidth) {\n      imageThumbNailsRef.current.scrollLeft = width2Set - window.innerWidth / 2;\n    } else {\n      imageThumbNailsRef.current.scrollLeft = imageThumbNailsRef.current.scrollWidth - window.innerWidth;\n    }\n  }, [SelectedId]);\n  useEffect(() => {\n    console.log(\"ImageArray.length : \", ImageArray.length);\n    window.ImageArrayLength = ImageArray.length;\n  }, [ImageArray]);\n\n  async function incrementToGlobal(b) {\n    var tempValue = Number(window.imageIdSelted) + Number(b);\n\n    if (ImageArray.length) {\n      // strange bug, why length = 0 when the image list is rendered correctly\n      if (tempValue > ImageArray.length - 1) {\n        tempValue = ImageArray.length - 1;\n      } else if (tempValue < 0) {\n        tempValue = 0;\n      }\n    }\n\n    console.log(tempValue);\n    window.imageIdSelted = Number(tempValue);\n    setSelectedId(window.imageIdSelted);\n    return window.imageIdSelted;\n  }\n\n  const addEventListener2Component = e => {\n    imageThumbNailsRef.current.addEventListener('wheel', handleOnWheel);\n  };\n\n  const removeEventListenerFromComponent = e => {\n    if (imageThumbNailsRef.current) {\n      imageThumbNailsRef.current.removeEventListener('wheel', handleOnWheel);\n    }\n  };\n\n  const addEventListener2ImgeDetail = e => {\n    imageDetailRef.current.addEventListener('wheel', handleSwitchImgOnWheel);\n  };\n\n  const removeEventListener2ImgeDetail = e => {\n    if (imageDetailRef.current) {\n      imageDetailRef.current.removeEventListener('wheel', handleSwitchImgOnWheel);\n    }\n  };\n\n  const handleOnclickToSelect = (e, id) => {\n    setSelectedId(id);\n  };\n\n  const handleOnClickForward = e => {\n    let SelectedId_val = SelectedId + 1;\n\n    if (SelectedId_val > ImageArray.length - 1) {\n      SelectedId_val = ImageArray.length - 1;\n    }\n\n    setSelectedId(SelectedId_val);\n  };\n\n  const handleOnClickBack = e => {\n    let SelectedId_val = SelectedId - 1;\n\n    if (SelectedId_val < 0) {\n      SelectedId_val = 0;\n    }\n\n    setSelectedId(SelectedId_val);\n  };\n\n  const handleSwitchImgOnWheel = async e => {\n    e.preventDefault();\n\n    if (e.deltaY > 0) {\n      await incrementToGlobal(1);\n    } else {\n      await incrementToGlobal(-1);\n    }\n  };\n\n  function handleOnWheel(e) {\n    // console.log(state.reachRightEnd, state.previousValuesForScrollLeft0,\n    //     state.previousValuesForScrollLeft1,state.previousValuesForScrollLeft2)\n    if (e.deltaY < 0) {\n      // scroll up \n      if (window.scrollY == 0) {\n        e.preventDefault(); // disable parent scroll \n\n        imageThumbNailsRef.current.scrollLeft -= imageThumbNailsRef.current.scrollWidth * 0.02; // if (imageThumbNailsRef.current.scrollLeft <=0) {\n        //     imageThumbNailsRef.current.scrollLeft = 0 ;\n        // }\n        // reset if scroll left \n\n        state.reachRightEnd = 0;\n        state.previousValuesForScrollLeft0 = 0;\n        state.previousValuesForScrollLeft1 = 0;\n        state.previousValuesForScrollLeft2 = 0;\n      } //if parent scrolly != equal to 0 , scroll parent first\n\n    } else {\n      //scroll down , scroll child first , then propagate to parent scroll\n      if (state.reachRightEnd == 0) {\n        // scroll right , never can reach maximum\n        // find a signal indicating reaching the right edge.\n        e.preventDefault(); // disable parent scroll \n\n        imageThumbNailsRef.current.scrollLeft += imageThumbNailsRef.current.scrollWidth * 0.02;\n        state.previousValuesForScrollLeft2 = state.previousValuesForScrollLeft1;\n        state.previousValuesForScrollLeft1 = state.previousValuesForScrollLeft0;\n        state.previousValuesForScrollLeft0 = imageThumbNailsRef.current.scrollLeft;\n\n        if (state.previousValuesForScrollLeft0 == state.previousValuesForScrollLeft1 && state.previousValuesForScrollLeft1 == state.previousValuesForScrollLeft2 && state.previousValuesForScrollLeft1 > 10) {\n          state.reachRightEnd = 1;\n        }\n      }\n    } // console.log(imageThumbNailsRef.current.scrollLeft, imageThumbNailsRef.current.scrollWidth)\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"imageDetalViewRoot\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: \"imageDetalViewRootCheckbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imageDetail\",\n      ref: imageDetailRef,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: ImageArray[SelectedId]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arrowForwardIconWrapper\",\n        onClick: handleOnClickForward,\n        children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n          style: {\n            color: 'rgb(255,255,255)',\n            fontSize: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arrowBackIconWrapper\",\n        onClick: handleOnClickBack,\n        children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n          style: {\n            color: 'rgb(255,255,255)',\n            fontSize: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"icoMenuWrapper\",\n        for: \"imageDetalViewRootCheckbox\",\n        children: /*#__PURE__*/_jsxDEV(MenuOpenIcon, {\n          style: {\n            color: 'rgb(255,255,255)',\n            fontSize: \"30px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imageThumbNails\",\n      ref: imageThumbNailsRef,\n      children: ImageArray.map((image, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"album\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: ImageArray[id],\n          onClick: e => {\n            handleOnclickToSelect(e, id);\n          },\n          style: SelectedId == id ? {\n            borderStyle: 'solid',\n            borderWidth: '2px',\n            borderColor: 'red'\n          } : {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 29\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ImageDetailView, \"XNfj463AymrF4GiBgQjQ00NDZ+4=\");\n\n_c = ImageDetailView;\nexport default ImageDetailView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageDetailView\");","map":{"version":3,"sources":["/home/brian/project/p2pchat/react/frontend/src/components/Content/Gallery/ImageDetailView/ImageDetailView.js"],"names":["React","useState","useEffect","useRef","getSafeProperty","ArrowForwardIcon","ArrowBackIcon","MenuOpenIcon","ImageDetailView","props","ImageArray","setImageArray","SelectedId","setSelectedId","imageThumbNailsRef","imageDetailRef","state","reachRightEnd","previousValuesForScrollLeft0","previousValuesForScrollLeft1","previousValuesForScrollLeft2","addEventListener2Component","addEventListener2ImgeDetail","window","imageIdSelted","Number","location","myparams","match","params","imageId","removeEventListenerFromComponent","removeEventListener2ImgeDetail","console","log","length","imageWidth","current","scrollWidth","width2Set","innerWidth","scrollLeft","ImageArrayLength","incrementToGlobal","b","tempValue","e","addEventListener","handleOnWheel","removeEventListener","handleSwitchImgOnWheel","handleOnclickToSelect","id","handleOnClickForward","SelectedId_val","handleOnClickBack","preventDefault","deltaY","scrollY","color","fontSize","map","image","borderStyle","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import React, {useState,useEffect,useRef} from 'react'\nimport './ImageDetailView.css'\nimport getSafeProperty from '../../../../utility/getSafeProperty'\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\n\nfunction ImageDetailView(props) {\n\n    const [ImageArray, setImageArray] = useState([])\n    const [SelectedId, setSelectedId] = useState(0)\n    const imageThumbNailsRef = useRef(null)\n    const imageDetailRef = useRef(null)\n\n\n    let state = {\n        reachRightEnd : 0 ,\n        previousValuesForScrollLeft0 : null,\n        previousValuesForScrollLeft1 : null,\n        previousValuesForScrollLeft2 : null,\n    }\n\n    useEffect(\n        () => {\n            // on component mount \n\n            addEventListener2Component();\n            addEventListener2ImgeDetail();\n            // SelectedIdRef.current = SelectedId ;\n            window.imageIdSelted = Number(0)\n\n            if (props.location.myparams) {\n\n                const ImageArray = getSafeProperty(()=>props.location.myparams.ImageArray, 'undefined')\n                if (ImageArray  !== 'undefined') {\n                    setImageArray(ImageArray)\n                }\n            }\n\n            setSelectedId(props.match.params.imageId)\n\n            return () => {\n                // component unmount \n                removeEventListenerFromComponent();\n                removeEventListener2ImgeDetail();\n            }\n        },\n\n        [])\n\n    \n    useEffect(\n        () => {\n            // console.log(SelectedId)\n\n            // SelectedIdRef.current = SelectedId ;\n            // state.imageIdSeleted = SelectedId ;\n            // window.imageIdSelted = Number(SelectedId) ;\n            // console.log(\"window.imageIdSelted, \", window.imageIdSelted)\n\n            console.log (\"ImageArray.length : \",ImageArray.length)\n\n            const imageWidth = imageThumbNailsRef.current.scrollWidth / ImageArray.length\n            const width2Set = imageWidth * SelectedId ;\n            if (width2Set + window.innerWidth < imageThumbNailsRef.current.scrollWidth) {\n                imageThumbNailsRef.current.scrollLeft =  width2Set - window.innerWidth / 2 ;\n            } else {\n                imageThumbNailsRef.current.scrollLeft = imageThumbNailsRef.current.scrollWidth - window.innerWidth ;\n            }\n\n        },\n\n    [SelectedId])\n\n    useEffect(\n        () => {\n\n\n            console.log (\"ImageArray.length : \",ImageArray.length)\n            window.ImageArrayLength = ImageArray.length ;\n\n        },\n\n    [ImageArray])\n\n    async function incrementToGlobal (b) {\n\n        var tempValue = Number(window.imageIdSelted) + Number(b) \n\n        if (ImageArray.length) {     // strange bug, why length = 0 when the image list is rendered correctly\n            if (tempValue > ImageArray.length-1){\n                tempValue = ImageArray.length-1 \n            } else if (tempValue < 0) {\n                tempValue = 0 \n            }\n        }\n\n        console.log(tempValue)\n\n        window.imageIdSelted = Number(tempValue) ;\n        setSelectedId(window.imageIdSelted)\n\n        return window.imageIdSelted\n    }\n\n\n    const addEventListener2Component = (e) => {\n        imageThumbNailsRef.current.addEventListener('wheel', handleOnWheel)\n    }\n    \n    const removeEventListenerFromComponent = (e) => {\n        if (imageThumbNailsRef.current) {\n            imageThumbNailsRef.current.removeEventListener('wheel',handleOnWheel)\n        }\n    }\n\n    const addEventListener2ImgeDetail = (e) => {\n        imageDetailRef.current.addEventListener('wheel', handleSwitchImgOnWheel)\n    }\n    \n    const removeEventListener2ImgeDetail = (e) => {\n        if (imageDetailRef.current) {\n            imageDetailRef.current.removeEventListener('wheel',handleSwitchImgOnWheel)\n        }\n    }\n\n    const handleOnclickToSelect = (e,id) => {\n        setSelectedId(id)\n    }\n\n    const handleOnClickForward = (e) => {\n        let SelectedId_val = SelectedId + 1 ;\n        if (SelectedId_val > ImageArray.length-1) {\n            SelectedId_val = ImageArray.length-1;\n        }\n        setSelectedId(SelectedId_val )\n    }\n\n    const handleOnClickBack = (e) => {\n        let SelectedId_val = SelectedId - 1 ;\n        if (SelectedId_val < 0) {\n            SelectedId_val = 0;\n        }\n        setSelectedId(SelectedId_val )\n    }\n\n    const handleSwitchImgOnWheel = async(e) => {\n        e.preventDefault();\n\n        if (e.deltaY > 0) {\n            await incrementToGlobal(1)\n        } else {\n            await incrementToGlobal(-1)\n        }\n    }\n\n    function handleOnWheel(e){\n\n        // console.log(state.reachRightEnd, state.previousValuesForScrollLeft0,\n        //     state.previousValuesForScrollLeft1,state.previousValuesForScrollLeft2)\n\n        if (e.deltaY < 0) {\n            // scroll up \n            if(window.scrollY == 0) {\n                e.preventDefault(); // disable parent scroll \n                \n                imageThumbNailsRef.current.scrollLeft -= imageThumbNailsRef.current.scrollWidth * 0.02 ;\n                // if (imageThumbNailsRef.current.scrollLeft <=0) {\n                //     imageThumbNailsRef.current.scrollLeft = 0 ;\n                // }\n                // reset if scroll left \n                state.reachRightEnd = 0 ;\n                state.previousValuesForScrollLeft0 = 0 ;\n                state.previousValuesForScrollLeft1 = 0 ;\n                state.previousValuesForScrollLeft2 = 0 ;\n\n            }\n            //if parent scrolly != equal to 0 , scroll parent first\n        } else {\n            //scroll down , scroll child first , then propagate to parent scroll\n            if (state.reachRightEnd == 0 ){ // scroll right , never can reach maximum\n                // find a signal indicating reaching the right edge.\n                e.preventDefault(); // disable parent scroll \n                imageThumbNailsRef.current.scrollLeft += imageThumbNailsRef.current.scrollWidth * 0.02;\n                \n                state.previousValuesForScrollLeft2 = state.previousValuesForScrollLeft1;\n                state.previousValuesForScrollLeft1 = state.previousValuesForScrollLeft0;\n                state.previousValuesForScrollLeft0 = imageThumbNailsRef.current.scrollLeft ;\n                if (state.previousValuesForScrollLeft0 == state.previousValuesForScrollLeft1 &&\n                    state.previousValuesForScrollLeft1 == state.previousValuesForScrollLeft2 && \n                    state.previousValuesForScrollLeft1 >  10\n                    ){\n                        state.reachRightEnd = 1 ;\n                    }\n            }\n        }\n\n        // console.log(imageThumbNailsRef.current.scrollLeft, imageThumbNailsRef.current.scrollWidth)\n        \n\n    }\n\n    return (\n        <div className='imageDetalViewRoot'>\n            <input type='checkbox' id='imageDetalViewRootCheckbox' />\n            <div className='imageDetail' ref={imageDetailRef} >\n                <img src={ImageArray[SelectedId]} />\n                <div className='arrowForwardIconWrapper' onClick={handleOnClickForward} > \n                    <ArrowForwardIcon style={{ color: 'rgb(255,255,255)', fontSize: \"20px\" }} />\n                </div>\n                <div className='arrowBackIconWrapper' onClick={handleOnClickBack} > \n                    <ArrowBackIcon style={{ color: 'rgb(255,255,255)', fontSize: \"20px\" }}  />\n                </div>\n                <label className='icoMenuWrapper' for='imageDetalViewRootCheckbox'>\n                    <MenuOpenIcon style={{ color: 'rgb(255,255,255)', fontSize: \"30px\"}}  />\n                </label>\n            </div>\n            <div className='imageThumbNails' ref={imageThumbNailsRef}>\n                    {ImageArray.map((image,id) => (\n                        <div className='album' \n                            key={id}\n                        >\n                            <img src={ImageArray[id]} \n                                onClick={(e)=>{handleOnclickToSelect(e,id)}}     \n                                style={\n                                    (SelectedId == id)? {borderStyle: 'solid', borderWidth: '2px', borderColor:'red' } : {}\n                                }\n                            />\n                        </div>   \n                    ))}\n            </div>\n        </div>\n    )\n}\n\nexport default ImageDetailView\n"]},"metadata":{},"sourceType":"module"}